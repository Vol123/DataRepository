---------- КАК ПОЯВЛЯЮТСЯ СТИЛИ

1. Указать стили в качестве значения атрибута style. 
	<p style="color: red">

2. Использовать специальный тег <style>
	Браузер обработает всё, что написано внутри этого тега как CSS код

	<style>
	   
	   /* по тегу */
	   p { color: #0000; backcolor: #ffff; }
	   
           /* по классу */
	   .class { color: #0000; backcolor: #ffff; }

           /* по тегу с классом */
	   p.class { color: #0000; backcolor: #ffff; }

	   /* по ID (ТОЛЬКО ОДИН НА СТРАНИЦЕ! ссылка на место в странице или просто ID!?- как еще один вариант класса*/
	   #id { color: #0000; backcolor: #ffff; }
	
 	   /* по тегу с ID*/
	   div#id { color: #0000; backcolor: #ffff; } /* точку после тега перед #id не ставить! */

	   /* по тегу <span> внутри другого тега с классом <class> */
	   .class span
		 { color: #0000; backcolor: #ffff; }

	   /* по тегу с классом <class2> внутри класса <class1> */
	   .class1 .class2
		{ color: #0000; backcolor: #ffff; }
	
	</style>
	
3. Подключать отдельный файл со стилями
 
	В этом случае создаётся файл с расширением .css, в котором записываются CSS правила 
	Для подключения файла используется мета-тег <link> ЖЕЛАТЕЛЬНО в разделе <head>
		<link rel=""stylesheet" type="text/css" href="/css/tables.css"> - одинарный тег со ссылкой на файл href 

   Формат файла .css:
	Тег <style> писать не нужно!
	Например:
		.class { 
	 	  color: #0000; 
		}
		p { 
		  font-size: 10px !important; /* !important переопределит все что было указано на странице в частных случаях */
		}
		...

-------------

Комментарии записываются в CSS другим СПОСОБОМ, чем в HTML
/*
    Комметарий
*/

Пример:
<style>
   .sample {
      color: #0000;
      /* backcolor: #0000; */
   }
   /* Комментарий */
</style>

---------- АТРИБУТЫ(СВОЙСТВА) СТИЛЕЙ 

font-size: 20px;	// px это указание на пиксели, иначе это будет коэффициент умножения 2, 3, ... (2x, 3x, ...)
	200%; 		// проценты от родительского
	1.5em;		// кэффициент от родителького (на 50% больше) 
	1.2rem;		// кэффициент от корневого <html> (на 20% больше от 16px - значение <html> по умолчению) 
color: (red, ...);
font-style: (normal, italic, oblique);
font-variant: (normal, small-caps);
font-weight: (bold, normal, значения);		// значения: 100, 200, ... 400 = normal ... 600, 700 = bold, 800, ...
text-align: (left, right, justify, center);
line-height: (значение расстояния в пикселях между строками);
font-family: Arial, Futura, Verdana, [НАСТРОЙКИ]
	НАСТРОЙКИ:
		serif 		— шрифты с засечками (антиквы). Ярким представителем таких шрифтов является Times New Roman		
		sans-serif 	— шрифты без засечек (гротеск). Наиболее знакомыми такими шрифтами являются Arial и Verdana
		cursive 	— курсивные шрифты
		fantasy 	— декоративные шрифты. 
					Это семейство используется реже всего. 
					Дело в том, что декоративные шрифты слишком разные, 
					чтобы они были взаимозаменяемые
		monospace 	— моноширинные шрифты. 
					К ним относятся шрифты, в которых все символы имеют одинаковую ширину. 
					Очень часто их используют программисты в текстовых редакторах
РАМКА:
border-width:— ширина границы
border-style: — стиль границы, см. варианты стилей
border-color: — цвет границы через #nnnnn
Пример:
   <style>
       .border-bold {border-bold:5px; border-color:#2196F3; border-style:solid;} // укороченный вариант == {border: 5px solid #2196F3}
   </style>

-------------

font: [font-style] [font-variant] [font-weight] [font-size / line-height] [font-family]		// [font-size] и [font-family] ОБЯЗАТЕЛЬНЫ!
Пример:
   <style>
        .sample {font:bold 24px Verdana, sans-serif;}	// ЗАПЯТАЯ ОБЯЗАТЕЛЬНО СТАВИТСЯ после [font-family] как настройки см. выше
							// укороченный вариант из:
							// font-weight:bold; font-size:24px; font-family:Verdana,sans-serif;
   </style>

-------------

text-decoration:
	underline 	— Подчёркивание текста
	line-through 	— Перечёркивание текста
	overline 	— Надчёркивание текста
border: 1px solid #000;

-------------

color: #ffffff;			// основной цвет
background-color: #673ab7;	// цвет фона
width:				// ширина блока (/div /span /p ...)
height:				// высота блока

-------------
color:
background-color:
border-color:

	rgb(255, 0, 255) 	// способ задания через RGB цвета
	rgba(255, 0, 255, 0.5) 	// 0,5 коэффицинт прозрачности 

-------------

РАСШИРЕНИЕ ОБЛАСТИ БЛОКА
Общее -> 	{padding: 10px, 5px, 3px, 2px} 	- сдвиг в последовательности как указанно ниже, но можно 
		{padding: 5px, 10px} 		- 5 по вертикали и 10 по горизонтали
		{padding: 5px} 			- 5 со всех сторон

	padding-top:		 — внутренний отступ сверху
	padding-right:		 — внутренний отступ справа
	padding-bottom:		 — внутренний отступ снизу
	padding-left:		 — внутренний отступ слева

-------------

УВЕЛИЧЕНИЕ ОТСТУПА МЕЖДУ БЛОКАМИ
Общее -> 	{margin: 10px, 5px, 3px, 2px} 	- сдвиг в последовательности как указанно ниже, но можно 
		{margin: 5px, 10px} 		- 5 по вертикали и 10 по горизонтали
		{margin: 5px} 			- 5 со всех сторон

	margin-top 		— внешний отступ сверху
	margin-right 		— внешний отступ справа
	margin-bottom 		— внешний отступ снизу
	margin-left 		— внешний отступ слева


-------------

box-sizing: content-box // к ширине длине будут добавлены padding margin и border, например: 
				.box {
  					width: 100px;
 					height: 100px;
  					padding: 20px;
 					margin: 10px;
  					border: 1px solid #fff;} 100 + 20 + 20 + 10 + 10 + 1 + 1 = 162px
box-sizing: border-box // значения границы и внутренних отступов не увеличивают элемент, а «съедают» место у контента

-------------

@media (max-width: 700px) { // задание стиля с условием, ширина экрана 700px и менее
  .text {
    color: #000000;
  }
}

max-width 	- ширина экрана
max-height 	- высота экрана
orientation 	- ориентация экрана на мобильном (portrait или landscape) 

-------------

@keyframes anim-name { // правило аниамации с именем anim-name 
  0% 	{ color: blue; }
  50% 	{ color: red; }
  100%  { color: blue; }
}

.animation-text { animation: anim-name 3s infinite; } // задание стиля с анамацией anim-name 3 секунды по кругу infinite

-------------

:root {
  --main-color: #000000; // задание глобальной переменной
}
.news-block {
  background-color: var(--main-color); // использование переменной
}

-------------

<style>
  .absolute-position {
    position: absolute;	// absolute - абсолютное позиционирование (фиксированная координата в ленте) 
			// fixed - блок будет «следовать за страницей» и всегда находится в зоне видимости пользователя
			// relative - Другие блоки не будут вставать на место, где блок располагался до применения правила position 
    
    top: 50px;		// Координаты позиционируемого блока
    left: 50px
    bottom: 100px;
    right: 100px;
  }
</style>

---------- ЗАДАНИЕ ТАБЛИЦЫ СТИЛЕЙ -----------------------------

Переопределение не работает!!!

------------------ ДЛЯ ТЕГА

<div style="font-size: 20px;"> // применение стиля для всех подчиненных элементов
</div>

------------------ ГЛОБАЛЬНЫЙ КОНТЕКСТ

<style> // задание стиля для всех тегов имеющих класс "paragraph"
  .paragraph {color: red;}
</style>
<p class="paragraph">
  Текст класса с красным цветом!
</p>

<style> // задание стиля для экземпляра "sample"
  #sample {color: red;}
</style>
<p id="sample">
  Текст id экземпляра с красным цветом!
</p>

------------------ STYLE С ТЕГАМИ

<style> // задание таблицы стилей для тегов
  div {font-size: 20px;}
  p {font-size: 10px;}
</style>

------------------ ПСЕВДОКЛАССЫ

a:link	{ color: #FFFF; ... }
a:link		// ссылка по которой никто не переходил
a:visited	// ссылка по которой перешли
a:hover		// ссылка при наведении
a:active	// ссылка по которой нажали, но еще не отпустили кнопку мыши




