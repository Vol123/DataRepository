:visited
Этот псевдокласс предназначен для посещенных ссылок . 
По умолчанию ссылки имеют синий цвет и становятся фиолетовыми , когда вы их посещаете. Результаты Google работают так.

:focus
Этот псевдокласс возникает, когда элемент HTML находится в фокусе . Это особенно полезно для ввода HTML .

:first-child и :last-child
Эти псевдоклассы связаны с иерархией HTML . Они нацелены на элементы HTML в зависимости от порядка их появления в коде.

:nth-child
Этот псевдокласс является более глобальной версией :first-childи :last-child. 
С помощью :nth-childвы можете рассчитать , какой дочерний элемент вы хотите настроить.
Например, если вы хотите настроить таргетинг на второго ребенка, вы должны использовать :nth-child(2):
Атрибуты
Хотя использование числа простое, в нем :nth-childесть 2 ключевых слова:
:nth-child(odd) - будет нацелен на каждый нечетный элемент
:nth-child(even) - будет нацелен на каждый четный элемент
:nth-child(3n) - будет нацелен на каждый 3 объект в списке
:nth-child(3n + 1) - смещние начала на 1

Градиенты
По умолчанию:
направление вертикальное , сверху вниз _ _ _
первый цвет находится в начале (сверху )
второй цвет в конце (внизу)
Изменение направления
Если направление сверху вниз вас не устраивает, вы можете изменить его одним из следующих способов:
определение назначения градиента с такими ключевыми словами, какto left top
определение определенного угла в градусах, например45 deg
Это направление должно быть установлено перед цветами:
---------
По умолчанию фигура заканчивается в самом дальнем углу . Вы можете выбрать:
closest-side
closest-corner
farthest-side
farthest-corner
----------
Тонкие
.button-grey  { background-image: linear-gradient(#f2f2f2, #f2f2f2);}
.button-yellow{ background-image: linear-gradient(#fce374, #fcdf5b);}
.button-orange{ background-image: linear-gradient(#f58a38, #f57c20);}
.button-red   { background-image: linear-gradient(#ed6d64, #ed574c);}
.button-purple{ background-image: linear-gradient(#847bba, #7568ba);}
.button-blue  { background-image: linear-gradient(#42b0e3, #2ba9e3);}
.button-green { background-image: linear-gradient(#97cc76, #8bcc62);}

transition(переходы)
Вы можете определить:
transition-property: какие свойства анимировать
transition-duration: как долго длится анимация
transition-timing-function: как рассчитываются промежуточные состояния
transition-delay: запустить анимацию через определенное время

transaction-property
1. all
2. background
3. border

transition-duration(seconds)

transition-timing-function
1. ease - медленное начало, быстрая середина, медленный конец
2. linear - постоянная скорость
3.ease-in -  медленное начало, быстрый конец
4. ease-out  - быстрый старт, медленный конец
5. ease-in-out - ускорение

animation
name: название анимации
duration: как долго длится переход
timing-function: как рассчитываются промежуточные состояния
delay: запустить анимацию через определенное время
iteration-count: сколько раз должна быть выполнена анимация
direction: если анимация должна быть обращена или нет
fill-mode: какие стили применяются до начала анимации и после ее окончания
----------
https://marksheet.io/css-animations.html - анимация(?)
https://marksheet.io/css-transform.html - еще более сложная анимация(?)

Условия для подкрутки к разным устройствам
body{ font-size: 18px;}
@media (min-width: 1000px) and (orientation: landscape) {
  body{ font-size: 20px;}
} (?)
Пояснение:
Размер шрифта будет установлен только в том случае, если окно просмотра 
имеет ширину 20px не менее 1000 пикселей и находится в ландшафтном режиме (в отличие от портретного режима).
Вы также можете использовать notи only. Они называются логическими операторами .
Несколько правил CSS
Вы можете включить в медиа-запрос столько правил CSS, сколько хотите.
-----------
https://marksheet.io/css-responsiveness.html - @media